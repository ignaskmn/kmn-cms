/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu".
 */
export interface Menu {
  id: string;
  menuItems: {
    label?: string;
    slug?: string;
    submenu?: boolean;
    submenuItems: {
      label?: string;
      slug?: string;
      id?: string;
    }[];
    id?: string;
  }[];
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "information".
 */
export interface Information {
  id: string;
  informationBlocks: {
    title?: string;
    layout: (
      | {
          content: {
            label?: string;
            file?: string | Document;
            id?: string;
          }[];
          id?: string;
          blockName?: string;
          blockType: 'infoDoc';
        }
      | {
          content?: {
            [k: string]: unknown;
          }[];
          id?: string;
          blockName?: string;
          blockType: 'richText';
        }
      | {
          title?: string;
          content: {
            label?: string;
            file?: string | Document;
            id?: string;
          }[];
          id?: string;
          blockName?: string;
          blockType: 'infoCollapse';
        }
      | {
          content: {
            label?: string;
            file?: string | Document;
            id?: string;
          }[];
          id?: string;
          blockName?: string;
          blockType: 'infoBoxes';
        }
    )[];
    id?: string;
  }[];
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "examples".
 */
export interface Example {
  id: string;
  thisIsAField?: string;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string;
  slug?: string;
  title: string;
  type?: 'residency' | 'exhibition' | 'education' | 'sound' | 'event' | 'screening' | 'massEvent';
  start?: string;
  end?: string;
  description?: string;
  image9x16: string | Image;
  image1x1?: string | Image;
  layout: {
    title?: string;
    participants: {
      firstName?: string;
      lastName?: string;
      nationality?: string;
      bio?: string;
      id?: string;
    }[];
    id?: string;
    blockName?: string;
    blockType: 'participants';
  }[];
  tags?: string[] | Tag[];
  meta: {
    title?: string;
    description?: string;
    image?: string | Image;
  };
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface Image {
  id: string;
  alt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes: {
    thumbnail: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  tag?: string;
  createdAt: string;
  updatedAt: string;
}
